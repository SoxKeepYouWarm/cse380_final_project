


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             interrupts, CODE, READWRITE
    2 00000000                 IMPORT           uart_init
    3 00000000                 IMPORT           output_string
    4 00000000                 IMPORT           read_string
    5 00000000                 IMPORT           write_character
    6 00000000                 IMPORT           read_character
    7 00000000                 IMPORT           interrupt_init
    8 00000000                 IMPORT           div_and_mod
    9 00000000         
   10 00000000                 EXPORT           FIQ_Handler
   11 00000000                 EXPORT           lab6
   12 00000000         
   13 00000000 40000000 
                       BASE    EQU              0x40000000
   14 00000000         
   15 00000000         
   16 00000000         ;Winnick variables
   17 00000000 400000BC 
                       curser  EQU              0x400000BC
   18 00000000         
   19 00000000 20 20 20 
              20 53 43 
              4F 52 45 
              3A 20 30 
              30 30 20 
              20 20 0A 
              0D 00    score   =                "    SCORE: 000   \n",13,0
   20 00000014                 ALIGN
   21 00000014 5A 5A 5A 
              5A 5A 5A 
              5A 5A 5A 
              5A 5A 5A 
              5A 5A 5A 
              5A 5A 0A 
              0D 00    line1   =                "ZZZZZZZZZZZZZZZZZ\n",13,0
   22 00000028                 ALIGN
   23 00000028 5A 42 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              58 5A 0A 
              0D 00    line2   =                "ZB             XZ\n",13,0
   24 0000003C                 ALIGN
   25 0000003C 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line3   =                "Z Z Z Z Z Z Z Z Z\n",13,0
   26 00000050                 ALIGN
   27 00000050 5A 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 5A 0A 
              0D 00    line4   =                "Z               Z\n",13,0



ARM Macro Assembler    Page 2 


   28 00000064                 ALIGN
   29 00000064 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line5   =                "Z Z Z Z Z Z Z Z Z\n",13,0
   30 00000078                 ALIGN
   31 00000078 5A 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 5A 0A 
              0D 00    line6   =                "Z               Z\n",13,0
   32 0000008C                 ALIGN
   33 0000008C 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line7   =                "Z Z Z Z Z Z Z Z Z\n",13,0
   34 000000A0                 ALIGN
   35 000000A0 5A 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 5A 0A 
              0D 00    line8   =                "Z               Z\n",13,0
   36 000000B4                 ALIGN
   37 000000B4 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line9   =                "Z Z Z Z Z Z Z Z Z\n",13,0
   38 000000C8                 ALIGN
   39 000000C8 5A 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 5A 0A 
              0D 00    line10  =                "Z               Z\n",13,0
   40 000000DC                 ALIGN
   41 000000DC 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line11  =                "Z Z Z Z Z Z Z Z Z\n",13,0
   42 000000F0                 ALIGN
   43 000000F0 5A 20 20 
              20 20 20 



ARM Macro Assembler    Page 3 


              20 20 20 
              20 20 20 
              20 20 20 
              20 5A 0A 
              0D 00    line12  =                "Z               Z\n",13,0
   44 00000104                 ALIGN
   45 00000104 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line13  =                "Z Z Z Z Z Z Z Z Z\n",13,0
   46 00000118                 ALIGN
   47 00000118 5A 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 5A 0A 
              0D 00    line14  =                "Z               Z\n",13,0
   48 0000012C                 ALIGN
   49 0000012C 5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 20 
              5A 20 5A 
              20 5A 0A 
              0D 00    line15  =                "Z Z Z Z Z Z Z Z Z\n",13,0
   50 00000140                 ALIGN
   51 00000140 5A 58 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              58 5A 0A 
              0D 00    line16  =                "ZX             XZ\n",13,0
   52 00000154                 ALIGN
   53 00000154 5A 5A 5A 
              5A 5A 5A 
              5A 5A 5A 
              5A 5A 5A 
              5A 5A 5A 
              5A 5A 0A 
              0D 00    line17  =                "ZZZZZZZZZZZZZZZZZ\n",13,0
   54 00000168                 ALIGN
   55 00000168 20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 



ARM Macro Assembler    Page 4 


              20 20 20 
              20 20 20 
              20 20 20 
              20 20 20 
              20 00    newadress
                               =                "                              
                      ",0
   56 0000019D 00 00 00        ALIGN
   57 000001A0 20 00   cursor_source
                               =                " ",0
   58 000001A2 00 00           ALIGN
   59 000001A4         
   60 000001A4         
   61 000001A4         ;my variables
   62 000001A4 57 65 6C 
              63 6F 6D 
              65 20 74 
              6F 20 6F 
              75 72 20 
              66 69 6E 
              61 6C 20 
              70 72 6F 
              6A 65 63 
              74 2C 0A 
              63 6F 6E 
              74 72 6F 
              6C 20 79 
              6F 75 72 
              20 63 68 
              61 72 61 
              63 74 65 
              72 20 6D 
              6F 76 65 
              6D 65 6E 
              74 20 77 
              69 74 68 
              20 77 61 
              73 64 2C 
              20 61 6E 
              64 20 70 
              6C 61 63 
              65 20 62 
              6F 6D 62 
              73 20 77 
              69 74 68 
              20 73 70 
              61 63 65 
              62 61 72 
              0A 70 61 
              75 73 65 
              20 74 68 
              65 20 67 
              61 6D 65 
              20 62 79 
              20 70 72 
              65 73 73 
              69 6E 67 
              20 74 68 
              65 20 68 



ARM Macro Assembler    Page 5 


              61 72 64 
              77 61 72 
              65 20 6B 
              65 79 0A prompt  =                "Welcome to our final project,\
ncontrol your character movement with wasd, and place bombs with spacebar\npaus
e the game by pressing the hardware key",10
   63 00000237 00              ALIGN
   64 00000238 20      current_direction
                               =                " "         ; 1 up, 2 left, 3 r
                                                            ight, 4 down
   65 00000239 00 00 00        ALIGN
   66 0000023C 00      initiation_condition
                               =                0           ;waiting for initia
                                                            lization
   67 0000023D 00 00 00        ALIGN
   68 00000240 00      termination_condition
                               =                0           ; set to 1 when gam
                                                            e should end
   69 00000241 00 00 00        ALIGN
   70 00000244 67 61 6D 
              65 20 6F 
              76 65 72 game_over
                               =                "game over"
   71 0000024D 00 00 00        ALIGN
   72 00000250 01      can_move
                               =                1           ;count moves to tim
                                                            e speed increments
   73 00000251 00 00 00        ALIGN
   74 00000254 20 20 20 
              20 20 20 
              20 20 0D 
              00       escape_key_sequence
                               =                "        ",13,0
   75 0000025E 00 00           ALIGN
   76 00000260         
   77 00000260         lab6
   78 00000260 E92D5FF0        stmfd            sp!, {r4 - r12, lr}
   79 00000264 E59F4230        ldr              r4, =cursor_source
   80 00000268 E3A00000        MOV              r0, #0
   81 0000026C E5C40000        STRB             r0, [r4]
   82 00000270 EBFFFFFE        bl               uart_init
   83 00000274 EBFFFFFE        bl               interrupt_init
   84 00000278 EB000079        bl               set_cursor_to_position
   85 0000027C E59F421C        ldr              r4, =escape_key_sequence
   86 00000280 EBFFFFFE        bl               output_string
   87 00000284         
   88 00000284         pre_game
   89 00000284 E59F4218        ldr              r4, =initiation_condition ;pres
                                                            s "ENTER" to start 
                                                            the game"
   90 00000288 E5D45000        ldrb             r5, [r4]
   91 0000028C E3550001        cmp              r5, #1
   92 00000290 1AFFFFFB        bne              pre_game
   93 00000294         
   94 00000294 E59F420C        ldr              r4, =0xE0004004 ;enable timer i
                                                            nterrupt
   95 00000298 E5945000        ldr              r5, [r4]
   96 0000029C E3855001        orr              r5, r5, #1
   97 000002A0 E5845000        str              r5, [r4]



ARM Macro Assembler    Page 6 


   98 000002A4         
   99 000002A4         ;BRICK_GENERATOR
  100 000002A4         
  101 000002A4         game_loop
  102 000002A4         
  103 000002A4         ;game mechanics and drawing operating on timed interrupt
                       
  104 000002A4         
  105 000002A4 E59F4200        ldr              r4, =termination_condition
  106 000002A8 E5D45000        ldrb             r5, [r4]
  107 000002AC E3550001        cmp              r5, #1
  108 000002B0 1AFFFFFB        bne              game_loop
  109 000002B4         
  110 000002B4         game_termination
  111 000002B4         
  112 000002B4         ;disable interrupts
  113 000002B4 E59F41F4        ldr              r4, =0xFFFFF010 ;interrupt enab
                                                            le register (VICInt
                                                            Enable)
  114 000002B8 E5945000        ldr              r5, [r4]
  115 000002BC E3C55010        bic              r5, r5, #0x10 ;enable bit 4 for
                                                             timer 0
  116 000002C0         ;orr r5, r5, #0x20  ;enable bit 5 for timer 1
  117 000002C0 E3C55040        bic              r5, r5, #0x40 ;enable bit 6 for
                                                             uart0 interrupt
  118 000002C4 E5845000        str              r5, [r4]
  119 000002C8         
  120 000002C8 E3A0000C        MOV              r0, #12
  121 000002CC EBFFFFFE        BL               write_character
  122 000002D0         
  123 000002D0 E59F41DC        ldr              r4, =prompt
  124 000002D4 EBFFFFFE        bl               output_string
  125 000002D8         
  126 000002D8 E8BD5FF0        ldmfd            sp!, {r4 - r12, lr}
  127 000002DC E12FFF1E        bx               lr
  128 000002E0         
  129 000002E0         
  130 000002E0         
  131 000002E0         
  132 000002E0         FIQ_Handler
  133 000002E0 E92D4007        stmfd            sp!, {r0 - r2, lr}
  134 000002E4         
  135 000002E4         read_data_interrupt
  136 000002E4 E59F01CC        LDR              r0, =0xE000C008
  137 000002E8 E5901000        LDR              r1, [r0]
  138 000002EC E2011001        and              r1, r1, #1  ;interrupt identifi
                                                            cation
  139 000002F0 E3510001        cmp              r1, #1      ;set to 1 if no pen
                                                            ding interrupts
  140 000002F4 0A000001        beq              timer_one_interrupt
  141 000002F8         
  142 000002F8         ;read data interrupt handler code
  143 000002F8 EB000013        bl               read_data_handler
  144 000002FC         
  145 000002FC EA000009        b                FIQ_Exit
  146 00000300         
  147 00000300         timer_one_interrupt
  148 00000300 E59F01B4        ldr              r0, =0xE0004000
  149 00000304 E5901000        ldr              r1, [r0]



ARM Macro Assembler    Page 7 


  150 00000308 E2012002        and              r2, r1, #2
  151 0000030C E3520002        cmp              r2, #2      ;is mr1 set
  152 00000310 1A000004        bne              FIQ_Exit
  153 00000314         
  154 00000314         ;timer 1 matches mr1 handler code
  155 00000314 EB000005        bl               timer_one_mr_one_handler
  156 00000318         
  157 00000318 E59F019C        LDR              R0, =0xE0004000 ;unset timer in
                                                            terrupt
  158 0000031C E5901000        LDR              R1, [R0]
  159 00000320 E3811002        ORR              R1, R1, #2
  160 00000324 E5801000        STR              R1, [R0]
  161 00000328         
  162 00000328         FIQ_Exit
  163 00000328 E8BD4007        LDMFD            SP!, {r0 - r2, lr}
  164 0000032C E25EF004        SUBS             pc, lr, #4
  165 00000330         
  166 00000330         
  167 00000330         
  168 00000330         timer_one_mr_one_handler
  169 00000330 E92D4003        stmfd            sp!, {r0, r1, lr}
  170 00000334         
  171 00000334         ;bl game_mechanics
  172 00000334         
  173 00000334 E59F0170        ldr              r0, =termination_condition
  174 00000338 E5D01000        ldrb             r1, [r0]
  175 0000033C E3510001        cmp              r1, #1
  176 00000340 0AFFFFFF        beq              early_termination_break
  177 00000344         
  178 00000344         ;bl board_draw
  179 00000344         
  180 00000344         early_termination_break
  181 00000344 E8BD4003        ldmfd            sp!, {r0, r1, lr}
  182 00000348 E12FFF1E        bx               lr
  183 0000034C         
  184 0000034C         
  185 0000034C         
  186 0000034C         
  187 0000034C         read_data_handler
  188 0000034C E92D4030        stmfd            sp!, {r4, r5, lr}
  189 00000350 E59F414C        ldr              r4, =initiation_condition
  190 00000354 E5D45000        ldrb             r5, [r4]
  191 00000358 E3550001        cmp              r5, #1
  192 0000035C 0B00000C        bleq             main_game_read_data_handler
  193 00000360 1B000001        blne             pre_game_read_data_handler
  194 00000364 E8BD4030        ldmfd            sp!, {r4, r5, lr}
  195 00000368 E12FFF1E        bx               lr
  196 0000036C         
  197 0000036C         pre_game_read_data_handler
  198 0000036C E92D4003        stmfd            sp!, {r0, r1, lr}
  199 00000370         
  200 00000370 E59F1148        LDR              r1, =0xE000C000 ;get character
  201 00000374 E5D10000        LDRB             r0, [r1]
  202 00000378         
  203 00000378 E350000D        cmp              r0, #13
  204 0000037C 1A000002        bne              pre_read_done ; didn't input en
                                                            ter, don't do anyth
                                                            ing
  205 00000380         



ARM Macro Assembler    Page 8 


  206 00000380 E59F011C        ldr              r0, =initiation_condition 
                                                            ; input was enter
  207 00000384 E3A01001        mov              r1, #1
  208 00000388 E5801000        str              r1, [r0]
  209 0000038C         
  210 0000038C         
  211 0000038C         pre_read_done
  212 0000038C E8BD4003        ldmfd            sp!, {r0, r1, lr}
  213 00000390 E12FFF1E        bx               lr
  214 00000394         
  215 00000394         main_game_read_data_handler
  216 00000394 E92D403F        stmfd            sp!, {r0 - r5, lr}
  217 00000398         
  218 00000398 E59F2120        LDR              r2, =0xE000C000 ;get character
  219 0000039C E5D20000        LDRB             r0, [r2]
  220 000003A0         
  221 000003A0         
  222 000003A0 E3500077        CMP              r0, #119    ; input w - set dir
                                                            ection up
  223 000003A4 0A000006        BEQ              set_direction_up
  224 000003A8         
  225 000003A8 E3500061        CMP              r0, #97     ; input a - set dir
                                                            ection left
  226 000003AC 0A00000A        BEQ              set_direction_left
  227 000003B0         
  228 000003B0 E3500073        CMP              r0, #115    ; input s - set dir
                                                            ection right
  229 000003B4 0A00000E        BEQ              set_direction_right
  230 000003B8         
  231 000003B8 E3500064        CMP              r0, #100    ; input d - set dir
                                                            ection down
  232 000003BC 0A000012        BEQ              set_direction_down
  233 000003C0         
  234 000003C0 EA000017        B                read_data_handler_exit
  235 000003C4         
  236 000003C4         set_direction_up
  237 000003C4 E92D0003        stmfd            sp!, {r0 - r1}
  238 000003C8         
  239 000003C8 E59F00F4        ldr              r0, =current_direction
  240 000003CC E3A01069        mov              r1, #105
  241 000003D0 E5C01000        strb             r1, [r0]
  242 000003D4         
  243 000003D4 E8BD0003        ldmfd            sp!, {r0 - r1}
  244 000003D8 EA000011        b                read_data_handler_exit
  245 000003DC         
  246 000003DC         set_direction_left
  247 000003DC E92D0003        stmfd            sp!, {r0 - r1}
  248 000003E0         
  249 000003E0 E59F00DC        ldr              r0, =current_direction
  250 000003E4 E3A0106A        mov              r1, #106
  251 000003E8 E5C01000        strb             r1, [r0]
  252 000003EC         
  253 000003EC E8BD0003        ldmfd            sp!, {r0 - r1}
  254 000003F0 EA00000B        b                read_data_handler_exit
  255 000003F4         
  256 000003F4         set_direction_right
  257 000003F4 E92D0003        stmfd            sp!, {r0 - r1}
  258 000003F8         
  259 000003F8 E59F00C4        ldr              r0, =current_direction



ARM Macro Assembler    Page 9 


  260 000003FC E3A0106B        mov              r1, #107
  261 00000400 E5C01000        strb             r1, [r0]
  262 00000404         
  263 00000404 E8BD0003        ldmfd            sp!, {r0 - r1}
  264 00000408 EA000005        b                read_data_handler_exit
  265 0000040C         
  266 0000040C         set_direction_down
  267 0000040C E92D0003        stmfd            sp!, {r0 - r1}
  268 00000410         
  269 00000410 E59F00AC        ldr              r0, =current_direction
  270 00000414 E3A0106D        mov              r1, #109
  271 00000418 E5C01000        strb             r1, [r0]
  272 0000041C         
  273 0000041C E8BD0003        ldmfd            sp!, {r0 - r1}
  274 00000420 EAFFFFFF        b                read_data_handler_exit
  275 00000424         
  276 00000424         read_data_handler_exit
  277 00000424 E8BD403F        ldmfd            sp!, {r0 - r5, lr}
  278 00000428 E12FFF1E        bx               lr
  279 0000042C         
  280 0000042C         double_game_speed
  281 0000042C E92D4003        stmfd            sp!, {r0 - r1, lr}
  282 00000430         
  283 00000430 E59F0090        ldr              r0, =0xE000401C ;load mr1
  284 00000434 E5901000        ldr              r1, [r0]
  285 00000438 E1A010A1        lsr              r1, #1      ;half delay time   
                                                             
  286 0000043C E5801000        str              r1, [r0]
  287 00000440         
  288 00000440 E8BD4003        ldmfd            sp!, {r0 - r1, lr}
  289 00000444 E12FFF1E        bx               lr
  290 00000448         
  291 00000448         halve_game_speed
  292 00000448 E92D4003        stmfd            sp!, {r0 - r1, lr}
  293 0000044C         
  294 0000044C E59F0074        ldr              r0, =0xE000401C ;load mr1
  295 00000450 E5901000        ldr              r1, [r0]
  296 00000454 E1A01081        lsl              r1, #1      ;double delay time
  297 00000458 E5801000        str              r1, [r0]
  298 0000045C         
  299 0000045C E8BD4003        ldmfd            sp!, {r0 - r1, lr}
  300 00000460 E12FFF1E        bx               lr
  301 00000464         
  302 00000464         
  303 00000464         set_cursor_to_position
  304 00000464 E92D4030        stmfd            sp!, {r4, r5, lr}
  305 00000468         
  306 00000468 E59F4030        ldr              r4, =escape_key_sequence
  307 0000046C E3A0501B        mov              r5, #27
  308 00000470 E5C45000        strb             r5, [r4]
  309 00000474         
  310 00000474 E3A0505B        mov              r5, #91
  311 00000478 E5C45001        strb             r5, [r4, #1]
  312 0000047C         
  313 0000047C E3E05009        mov              r5, #-10
  314 00000480 E5C45002        strb             r5, [r4, #2]
  315 00000484         
  316 00000484         ;mov r5, #59
  317 00000484         ;strb r5, [r4, #3]



ARM Macro Assembler    Page 10 


  318 00000484         
  319 00000484 E3A05001        mov              r5, #1
  320 00000488 E5C45003        strb             r5, [r4, #3]
  321 0000048C         
  322 0000048C E3A05066        mov              r5, #102
  323 00000490 E5C45005        strb             r5, [r4, #5]
  324 00000494         
  325 00000494         ;mov r5, #10
  326 00000494         ;strb r5, [r4, #6]
  327 00000494         
  328 00000494         
  329 00000494 E8BD4030        ldmfd            sp!, {r4, r5, lr}
  330 00000498 E12FFF1E        bx               lr
  331 0000049C         
  332 0000049C                 end
              00000000 
              00000000 
              00000000 
              E0004004 
              00000000 
              FFFFF010 
              00000000 
              E000C008 
              E0004000 
              E000C000 
              00000000 
              E000401C 
Command Line: --debug --xref --diag_suppress=9931 --apcs=interwork --depend=.\o
bjects\lab6.d -o.\objects\lab6.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM\CMS
IS\Include -IC:\Keil_v5\ARM\Inc\Philips --predefine="__EVAL SETA 1" --predefine
="__UVISION_VERSION SETA 514" --list=.\listings\lab6.lst lab6.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

FIQ_Exit 00000328

Symbol: FIQ_Exit
   Definitions
      At line 162 in file lab6.s
   Uses
      At line 145 in file lab6.s
      At line 152 in file lab6.s

FIQ_Handler 000002E0

Symbol: FIQ_Handler
   Definitions
      At line 132 in file lab6.s
   Uses
      At line 10 in file lab6.s
Comment: FIQ_Handler used once
can_move 00000250

Symbol: can_move
   Definitions
      At line 72 in file lab6.s
   Uses
      None
Comment: can_move unused
current_direction 00000238

Symbol: current_direction
   Definitions
      At line 64 in file lab6.s
   Uses
      At line 239 in file lab6.s
      At line 249 in file lab6.s
      At line 259 in file lab6.s
      At line 269 in file lab6.s

cursor_source 000001A0

Symbol: cursor_source
   Definitions
      At line 57 in file lab6.s
   Uses
      At line 79 in file lab6.s
Comment: cursor_source used once
double_game_speed 0000042C

Symbol: double_game_speed
   Definitions
      At line 280 in file lab6.s
   Uses
      None
Comment: double_game_speed unused
early_termination_break 00000344

Symbol: early_termination_break
   Definitions
      At line 180 in file lab6.s
   Uses
      At line 176 in file lab6.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: early_termination_break used once
escape_key_sequence 00000254

Symbol: escape_key_sequence
   Definitions
      At line 74 in file lab6.s
   Uses
      At line 85 in file lab6.s
      At line 306 in file lab6.s

game_loop 000002A4

Symbol: game_loop
   Definitions
      At line 101 in file lab6.s
   Uses
      At line 108 in file lab6.s
Comment: game_loop used once
game_over 00000244

Symbol: game_over
   Definitions
      At line 70 in file lab6.s
   Uses
      None
Comment: game_over unused
game_termination 000002B4

Symbol: game_termination
   Definitions
      At line 110 in file lab6.s
   Uses
      None
Comment: game_termination unused
halve_game_speed 00000448

Symbol: halve_game_speed
   Definitions
      At line 291 in file lab6.s
   Uses
      None
Comment: halve_game_speed unused
initiation_condition 0000023C

Symbol: initiation_condition
   Definitions
      At line 66 in file lab6.s
   Uses
      At line 89 in file lab6.s
      At line 189 in file lab6.s
      At line 206 in file lab6.s

interrupts 00000000

Symbol: interrupts
   Definitions
      At line 1 in file lab6.s
   Uses
      None



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

Comment: interrupts unused
lab6 00000260

Symbol: lab6
   Definitions
      At line 77 in file lab6.s
   Uses
      At line 11 in file lab6.s
Comment: lab6 used once
line1 00000014

Symbol: line1
   Definitions
      At line 21 in file lab6.s
   Uses
      None
Comment: line1 unused
line10 000000C8

Symbol: line10
   Definitions
      At line 39 in file lab6.s
   Uses
      None
Comment: line10 unused
line11 000000DC

Symbol: line11
   Definitions
      At line 41 in file lab6.s
   Uses
      None
Comment: line11 unused
line12 000000F0

Symbol: line12
   Definitions
      At line 43 in file lab6.s
   Uses
      None
Comment: line12 unused
line13 00000104

Symbol: line13
   Definitions
      At line 45 in file lab6.s
   Uses
      None
Comment: line13 unused
line14 00000118

Symbol: line14
   Definitions
      At line 47 in file lab6.s
   Uses
      None
Comment: line14 unused
line15 0000012C




ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

Symbol: line15
   Definitions
      At line 49 in file lab6.s
   Uses
      None
Comment: line15 unused
line16 00000140

Symbol: line16
   Definitions
      At line 51 in file lab6.s
   Uses
      None
Comment: line16 unused
line17 00000154

Symbol: line17
   Definitions
      At line 53 in file lab6.s
   Uses
      None
Comment: line17 unused
line2 00000028

Symbol: line2
   Definitions
      At line 23 in file lab6.s
   Uses
      None
Comment: line2 unused
line3 0000003C

Symbol: line3
   Definitions
      At line 25 in file lab6.s
   Uses
      None
Comment: line3 unused
line4 00000050

Symbol: line4
   Definitions
      At line 27 in file lab6.s
   Uses
      None
Comment: line4 unused
line5 00000064

Symbol: line5
   Definitions
      At line 29 in file lab6.s
   Uses
      None
Comment: line5 unused
line6 00000078

Symbol: line6
   Definitions
      At line 31 in file lab6.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

   Uses
      None
Comment: line6 unused
line7 0000008C

Symbol: line7
   Definitions
      At line 33 in file lab6.s
   Uses
      None
Comment: line7 unused
line8 000000A0

Symbol: line8
   Definitions
      At line 35 in file lab6.s
   Uses
      None
Comment: line8 unused
line9 000000B4

Symbol: line9
   Definitions
      At line 37 in file lab6.s
   Uses
      None
Comment: line9 unused
main_game_read_data_handler 00000394

Symbol: main_game_read_data_handler
   Definitions
      At line 215 in file lab6.s
   Uses
      At line 192 in file lab6.s
Comment: main_game_read_data_handler used once
newadress 00000168

Symbol: newadress
   Definitions
      At line 55 in file lab6.s
   Uses
      None
Comment: newadress unused
pre_game 00000284

Symbol: pre_game
   Definitions
      At line 88 in file lab6.s
   Uses
      At line 92 in file lab6.s
Comment: pre_game used once
pre_game_read_data_handler 0000036C

Symbol: pre_game_read_data_handler
   Definitions
      At line 197 in file lab6.s
   Uses
      At line 193 in file lab6.s
Comment: pre_game_read_data_handler used once



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols

pre_read_done 0000038C

Symbol: pre_read_done
   Definitions
      At line 211 in file lab6.s
   Uses
      At line 204 in file lab6.s
Comment: pre_read_done used once
prompt 000001A4

Symbol: prompt
   Definitions
      At line 62 in file lab6.s
   Uses
      At line 123 in file lab6.s
Comment: prompt used once
read_data_handler 0000034C

Symbol: read_data_handler
   Definitions
      At line 187 in file lab6.s
   Uses
      At line 143 in file lab6.s
Comment: read_data_handler used once
read_data_handler_exit 00000424

Symbol: read_data_handler_exit
   Definitions
      At line 276 in file lab6.s
   Uses
      At line 234 in file lab6.s
      At line 244 in file lab6.s
      At line 254 in file lab6.s
      At line 264 in file lab6.s
      At line 274 in file lab6.s

read_data_interrupt 000002E4

Symbol: read_data_interrupt
   Definitions
      At line 135 in file lab6.s
   Uses
      None
Comment: read_data_interrupt unused
score 00000000

Symbol: score
   Definitions
      At line 19 in file lab6.s
   Uses
      None
Comment: score unused
set_cursor_to_position 00000464

Symbol: set_cursor_to_position
   Definitions
      At line 303 in file lab6.s
   Uses
      At line 84 in file lab6.s



ARM Macro Assembler    Page 7 Alphabetic symbol ordering
Relocatable symbols

Comment: set_cursor_to_position used once
set_direction_down 0000040C

Symbol: set_direction_down
   Definitions
      At line 266 in file lab6.s
   Uses
      At line 232 in file lab6.s
Comment: set_direction_down used once
set_direction_left 000003DC

Symbol: set_direction_left
   Definitions
      At line 246 in file lab6.s
   Uses
      At line 226 in file lab6.s
Comment: set_direction_left used once
set_direction_right 000003F4

Symbol: set_direction_right
   Definitions
      At line 256 in file lab6.s
   Uses
      At line 229 in file lab6.s
Comment: set_direction_right used once
set_direction_up 000003C4

Symbol: set_direction_up
   Definitions
      At line 236 in file lab6.s
   Uses
      At line 223 in file lab6.s
Comment: set_direction_up used once
termination_condition 00000240

Symbol: termination_condition
   Definitions
      At line 68 in file lab6.s
   Uses
      At line 105 in file lab6.s
      At line 173 in file lab6.s

timer_one_interrupt 00000300

Symbol: timer_one_interrupt
   Definitions
      At line 147 in file lab6.s
   Uses
      At line 140 in file lab6.s
Comment: timer_one_interrupt used once
timer_one_mr_one_handler 00000330

Symbol: timer_one_mr_one_handler
   Definitions
      At line 168 in file lab6.s
   Uses
      At line 155 in file lab6.s
Comment: timer_one_mr_one_handler used once
50 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

BASE 40000000

Symbol: BASE
   Definitions
      At line 13 in file lab6.s
   Uses
      None
Comment: BASE unused
curser 400000BC

Symbol: curser
   Definitions
      At line 17 in file lab6.s
   Uses
      None
Comment: curser unused
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

div_and_mod 00000000

Symbol: div_and_mod
   Definitions
      At line 8 in file lab6.s
   Uses
      None
Comment: div_and_mod unused
interrupt_init 00000000

Symbol: interrupt_init
   Definitions
      At line 7 in file lab6.s
   Uses
      At line 83 in file lab6.s
Comment: interrupt_init used once
output_string 00000000

Symbol: output_string
   Definitions
      At line 3 in file lab6.s
   Uses
      At line 86 in file lab6.s
      At line 124 in file lab6.s

read_character 00000000

Symbol: read_character
   Definitions
      At line 6 in file lab6.s
   Uses
      None
Comment: read_character unused
read_string 00000000

Symbol: read_string
   Definitions
      At line 4 in file lab6.s
   Uses
      None
Comment: read_string unused
uart_init 00000000

Symbol: uart_init
   Definitions
      At line 2 in file lab6.s
   Uses
      At line 82 in file lab6.s
Comment: uart_init used once
write_character 00000000

Symbol: write_character
   Definitions
      At line 5 in file lab6.s
   Uses
      At line 121 in file lab6.s
Comment: write_character used once
7 symbols
393 symbols in table
